<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>&lt;p&gt;This project will build WebObjects projects (both Frameworks and Applications) that are based on Project Wonder and WOdka. &lt;/p&gt;&#xd;
&#xd;
&lt;p&gt;Apple WebObjects™ 5.4.3 and Prpject Wonder &apos;master&apos; branch will be used. &#xd;
  You have only to set your repository and branch of your project.&lt;/p&gt; &#xd;
  &#xd;
&lt;p&gt;You can also specify you want a &lt;b&gt;Test Build&lt;/b&gt; (no embedded frameworks) or a &lt;b&gt;Deployment Build&lt;/b&gt; (fully &#xd;
  embedded WebObjects and Project Wonder Frameworks)&#xd;
&#xd;
&lt;p&gt;You can use this project as a template for your own projects, or simply specify the parameters at runtime.&#xd;
  &#xd;
&lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; this project is meant to work together with the &#xd;
  &lt;a href=&quot;https://github.com/ishimoto/WOJenkins_Job_InstallWOdka.git&quot;&gt;InstallWOAndWOnder&lt;/a&gt; and&#xd;
  &lt;a href=&quot;https://github.com/ishimoto/WOJenkins_Job_InstallWOdka.git&quot;&gt;InstallWOdka&lt;/a&gt; Jenkins job. &#xd;
  That jobs will take care of downloading and installing WebObjects™ and cloning, building and installing Project WOnder and WOdka&#xd;
    so that they are available for this job to use.&#xd;
  &#xd;
  &lt;hr /&gt;&#xd;
  version 2013/02/17 by Ken Ishimoto</description>
  <logRotator>
    <daysToKeep>-1</daysToKeep>
    <numToKeep>3</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>PROJECT_GIT_REPOSITORY</name>
          <description></description>
          <defaultValue>git@github-Nipponya:ishimoto/NipponYa.git</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PROJECT_GIT_REFERENCE</name>
          <description></description>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>BUILD_TYPE</name>
          <description>Test Build will only link to frameworks (fast). Deployment will obey the Deployment settings defined in WOLips.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Test Build</string>
              <string>Deployment</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>JAVA_COMPATIBILITY_VERSION</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>1.6</string>
              <string>1.7</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="org.jenkinsci.plugins.multiplescms.MultiSCM" plugin="multiple-scms@0.2">
    <scms>
      <hudson.plugins.git.GitSCM plugin="git@1.1.26">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <name>origin</name>
            <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
            <url>${PROJECT_GIT_REPOSITORY}</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>origin/${PROJECT_GIT_REFERENCE}</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>false</recursiveSubmodules>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <authorOrCommitter>false</authorOrCommitter>
        <clean>false</clean>
        <wipeOutWorkspace>false</wipeOutWorkspace>
        <pruneBranches>false</pruneBranches>
        <remotePoll>false</remotePoll>
        <ignoreNotifyCommit>false</ignoreNotifyCommit>
        <useShallowClone>false</useShallowClone>
        <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
        <gitTool>Git 1.8.1</gitTool>
        <submoduleCfg class="list"/>
        <relativeTargetDir>Projects</relativeTargetDir>
        <reference></reference>
        <excludedRegions></excludedRegions>
        <excludedUsers></excludedUsers>
        <gitConfigName></gitConfigName>
        <gitConfigEmail></gitConfigEmail>
        <skipTag>false</skipTag>
        <includedRegions></includedRegions>
        <scmName>Project</scmName>
      </hudson.plugins.git.GitSCM>
      <hudson.plugins.git.GitSCM plugin="git@1.1.26">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <name></name>
            <refspec></refspec>
            <url>git@github-SnoWOman:ishimoto/SnoWOman.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>**</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>false</recursiveSubmodules>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <authorOrCommitter>false</authorOrCommitter>
        <clean>false</clean>
        <wipeOutWorkspace>false</wipeOutWorkspace>
        <pruneBranches>false</pruneBranches>
        <remotePoll>false</remotePoll>
        <ignoreNotifyCommit>false</ignoreNotifyCommit>
        <useShallowClone>false</useShallowClone>
        <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
        <gitTool>Git 1.8.1</gitTool>
        <submoduleCfg class="list"/>
        <relativeTargetDir>SnoWOman</relativeTargetDir>
        <reference></reference>
        <excludedRegions></excludedRegions>
        <excludedUsers></excludedUsers>
        <gitConfigName></gitConfigName>
        <gitConfigEmail></gitConfigEmail>
        <skipTag>false</skipTag>
        <includedRegions></includedRegions>
        <scmName></scmName>
      </hudson.plugins.git.GitSCM>
      <hudson.plugins.git.GitSCM plugin="git@1.1.26">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <name>origin</name>
            <refspec></refspec>
            <url>https://github.com/ishimoto/WOJenkins.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>master</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>false</recursiveSubmodules>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <authorOrCommitter>true</authorOrCommitter>
        <clean>true</clean>
        <wipeOutWorkspace>false</wipeOutWorkspace>
        <pruneBranches>true</pruneBranches>
        <remotePoll>false</remotePoll>
        <ignoreNotifyCommit>false</ignoreNotifyCommit>
        <useShallowClone>false</useShallowClone>
        <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
        <gitTool>Git 1.8.1</gitTool>
        <submoduleCfg class="list"/>
        <relativeTargetDir>WOJenkins</relativeTargetDir>
        <reference></reference>
        <excludedRegions></excludedRegions>
        <excludedUsers></excludedUsers>
        <gitConfigName></gitConfigName>
        <gitConfigEmail></gitConfigEmail>
        <skipTag>false</skipTag>
        <includedRegions></includedRegions>
        <scmName>WOJenkins</scmName>
      </hudson.plugins.git.GitSCM>
    </scms>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>true</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>${WORKSPACE}/WOJenkins/Build/WOdkaProjects/setupWOdkaAppWorkspace.sh</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Ant plugin="ant@1.1">
      <targets>-propertyfile ${WORKSPACE}/Root/jenkins.build.properties
-lib ${WORKSPACE}/WonderExtensionLaboratory/WOdkaTemplates/Templates/woproject.jar
-buildfile ${WORKSPACE}/SnoWOman/ERModernJQueryAddon/wodkabuild.xml
clean clean.install install</targets>
      <antName>(Default)</antName>
    </hudson.tasks.Ant>
    <hudson.tasks.Ant plugin="ant@1.1">
      <targets>-propertyfile ${WORKSPACE}/Root/jenkins.build.properties
-lib ${WORKSPACE}/WonderExtensionLaboratory/WOdkaTemplates/Templates/woproject.jar
-buildfile ${WORKSPACE}/SnoWOman/WOJquery/wodkabuild.xml
clean clean.install install</targets>
      <antName>(Default)</antName>
    </hudson.tasks.Ant>
    <hudson.tasks.Ant plugin="ant@1.1">
      <targets>-propertyfile ${WORKSPACE}/Root/jenkins.build.properties
-lib ${WORKSPACE}/WonderExtensionLaboratory/WOdkaTemplates/Templates/woproject.jar
-buildfile ${WORKSPACE}/SnoWOman/SKIN_Sandvox/wodkabuild.xml
clean clean.install install</targets>
      <antName>(Default)</antName>
    </hudson.tasks.Ant>
    <hudson.tasks.Ant plugin="ant@1.1">
      <targets>-propertyfile ${WORKSPACE}/Root/jenkins.build.properties
-lib ${WORKSPACE}/WonderExtensionLaboratory/WOdkaTemplates/Templates/woproject.jar
-buildfile ${WORKSPACE}/SnoWOman/SnoWOman/wodkabuild.xml
clean clean.install install</targets>
      <antName>(Default)</antName>
    </hudson.tasks.Ant>
    <hudson.tasks.Ant plugin="ant@1.1">
      <targets>-propertyfile ${WORKSPACE}/Root/jenkins.build.properties
-lib ${WORKSPACE}/WonderExtensionLaboratory/WOdkaTemplates/Templates/woproject.jar
-buildfile ${WORKSPACE}/Projects/SKIN_Nipponya/wodkabuild.xml
clean clean.install install</targets>
      <antName>(Default)</antName>
    </hudson.tasks.Ant>
    <hudson.tasks.Ant plugin="ant@1.1">
      <targets>-propertyfile ${WORKSPACE}/Root/jenkins.build.properties
-lib ${WORKSPACE}/WonderExtensionLaboratory/WOdkaTemplates/Templates/woproject.jar
-buildfile ${WORKSPACE}/Projects/SKIN_ChaNoMa/wodkabuild.xml
clean clean.install install</targets>
      <antName>(Default)</antName>
    </hudson.tasks.Ant>
    <hudson.tasks.Ant plugin="ant@1.1">
      <targets>-propertyfile ${WORKSPACE}/Root/jenkins.build.properties
-lib ${WORKSPACE}/WonderExtensionLaboratory/WOdkaTemplates/Templates/woproject.jar
-buildfile ${WORKSPACE}/Projects/WOMRBilling/wodkabuild.xml
clean clean.install install</targets>
      <antName>(Default)</antName>
    </hudson.tasks.Ant>
    <hudson.tasks.Ant plugin="ant@1.1">
      <targets>-propertyfile ${WORKSPACE}/Root/jenkins.build.properties
-lib ${WORKSPACE}/WonderExtensionLaboratory/WOdkaTemplates/Templates/woproject.jar
-buildfile ${WORKSPACE}/Projects/Nipponya/wodkabuild.xml
clean build
</targets>
      <antName>(Default)</antName>
    </hudson.tasks.Ant>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>**/dist/*.tar.gz</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers/>
</project>